apiVersion: v1
kind: ConfigMap
metadata:
  name: ping-mongo-init
  namespace: ping
  labels:
    app: ping
    tier: database  
data:
  mongo-init.js: |
    print('Starting mongo-init.js #################################################################');

    db = db.getSiblingDB('ping');

    db.createUser({
        user: 'ping',
        pwd: 'pong',
        roles: [
          {
            role: 'readWrite',
            db: 'ping'
          }
        ]
    });

    db.createCollection('pings');
---
apiVersion: v1
kind: Secret
metadata:
  name: ping-mongo-secret
  namespace: ping
  labels:
    app: ping
    tier: database
data:
  MONGO_INITDB_ROOT_PASSWORD: ZXhhbXBsZQ==
  MONGO_INITDB_ROOT_USERNAME: cm9vdA==
---
apiVersion: v1
kind: Service
metadata:
  name: ping-mongo
  namespace: ping
  labels:
    app: ping
    tier: database
spec:
  type: ClusterIP
  selector:
    app: ping
    tier: database
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ping-mongo
  namespace: ping
  labels:
    app: ping
    tier: database
spec:
  serviceName: ping-mongo
  replicas: 1
  selector:
    matchLabels:
      app: ping
      tier: database
  template:
    metadata:
      labels:
        app: ping
        tier: database
    spec:
      containers:
      - name: ping-mongo
        image: mongo:5.0.3
        envFrom:
        - secretRef:
            name: ping-mongo-secret
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
      volumes:
        - name: init-script
          configMap:
            name: ping-mongo-init
            items:
            - key: mongo-init.js
              path: mongo-init.js
